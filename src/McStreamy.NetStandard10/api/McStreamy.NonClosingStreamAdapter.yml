### YamlMime:ManagedReference
items:
- uid: McStreamy.NonClosingStreamAdapter
  commentId: T:McStreamy.NonClosingStreamAdapter
  id: NonClosingStreamAdapter
  parent: McStreamy
  children:
  - McStreamy.NonClosingStreamAdapter.#ctor(System.IO.Stream)
  - McStreamy.NonClosingStreamAdapter.CanRead
  - McStreamy.NonClosingStreamAdapter.CanSeek
  - McStreamy.NonClosingStreamAdapter.CanTimeout
  - McStreamy.NonClosingStreamAdapter.CanWrite
  - McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
  - McStreamy.NonClosingStreamAdapter.Flush
  - McStreamy.NonClosingStreamAdapter.Length
  - McStreamy.NonClosingStreamAdapter.Position
  - McStreamy.NonClosingStreamAdapter.Read(System.Byte[],System.Int32,System.Int32)
  - McStreamy.NonClosingStreamAdapter.ReadByte
  - McStreamy.NonClosingStreamAdapter.ReadTimeout
  - McStreamy.NonClosingStreamAdapter.Seek(System.Int64,SeekOrigin)
  - McStreamy.NonClosingStreamAdapter.SetLength(System.Int64)
  - McStreamy.NonClosingStreamAdapter.ToString
  - McStreamy.NonClosingStreamAdapter.Write(System.Byte[],System.Int32,System.Int32)
  - McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
  - McStreamy.NonClosingStreamAdapter.WriteTimeout
  langs:
  - csharp
  - vb
  name: NonClosingStreamAdapter
  nameWithType: NonClosingStreamAdapter
  fullName: McStreamy.NonClosingStreamAdapter
  type: Class
  source:
    id: NonClosingStreamAdapter
    path: ''
    startLine: 245
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nNonClosingStreamAdapter wraps an existing stream instance and passes through all calls except for <xref href=\"McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>, which is ignored. This\nis useful when you must pass a stream to another component that insists on closing the stream under various conditions, but you want to retain access \nto the stream after you&apos;re done with that component.\n"
  example: []
  syntax:
    content: 'public class NonClosingStreamAdapter : Stream'
    content.vb: >-
      Public Class NonClosingStreamAdapter
          Inherits Stream
  seealso:
  - linkId: System.IO.Stream
    commentId: T:System.IO.Stream
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: McStreamy.NonClosingStreamAdapter.#ctor(System.IO.Stream)
  commentId: M:McStreamy.NonClosingStreamAdapter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: NonClosingStreamAdapter(Stream)
  nameWithType: NonClosingStreamAdapter.NonClosingStreamAdapter(Stream)
  fullName: McStreamy.NonClosingStreamAdapter.NonClosingStreamAdapter(System.IO.Stream)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 261
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nInitializes a new instance of the <xref href=\"McStreamy.NonClosingStreamAdapter\" data-throw-if-not-resolved=\"false\"></xref> class wrapping the provided stream instance.\n"
  example: []
  syntax:
    content: public NonClosingStreamAdapter(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to wrap with this adapter instance.
    content.vb: Public Sub New(stream As Stream)
  overload: McStreamy.NonClosingStreamAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: McStreamy.NonClosingStreamAdapter.ToString
  commentId: M:McStreamy.NonClosingStreamAdapter.ToString
  id: ToString
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NonClosingStreamAdapter.ToString()
  fullName: McStreamy.NonClosingStreamAdapter.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 276
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> on the wrapped stream.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the wrapped stream.
    content.vb: Public Overrides Function ToString As String
  overload: McStreamy.NonClosingStreamAdapter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.WriteTimeout
  commentId: P:McStreamy.NonClosingStreamAdapter.WriteTimeout
  id: WriteTimeout
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: WriteTimeout
  nameWithType: NonClosingStreamAdapter.WriteTimeout
  fullName: McStreamy.NonClosingStreamAdapter.WriteTimeout
  type: Property
  source:
    id: WriteTimeout
    path: ''
    startLine: 285
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nSets or returns the <xref href=\"System.IO.Stream.WriteTimeout\" data-throw-if-not-resolved=\"false\"></xref> value on the wrapped stream.\n"
  example: []
  syntax:
    content: public override int WriteTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The write timeout.
    content.vb: Public Overrides Property WriteTimeout As Integer
  overload: McStreamy.NonClosingStreamAdapter.WriteTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
  commentId: M:McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: WriteByte(Byte)
  nameWithType: NonClosingStreamAdapter.WriteByte(Byte)
  fullName: McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
  type: Method
  source:
    id: WriteByte
    path: ''
    startLine: 302
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls <xref href=\"McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> on the wrapped stream.\n"
  example: []
  syntax:
    content: public override void WriteByte(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
    content.vb: Public Overrides Sub WriteByte(value As Byte)
  overload: McStreamy.NonClosingStreamAdapter.WriteByte*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.ReadByte
  commentId: M:McStreamy.NonClosingStreamAdapter.ReadByte
  id: ReadByte
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: NonClosingStreamAdapter.ReadByte()
  fullName: McStreamy.NonClosingStreamAdapter.ReadByte()
  type: Method
  source:
    id: ReadByte
    path: ''
    startLine: 311
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls <xref href=\"McStreamy.NonClosingStreamAdapter.ReadByte\" data-throw-if-not-resolved=\"false\"></xref> on the wrapped stream.\n"
  example: []
  syntax:
    content: public override int ReadByte()
    return:
      type: System.Int32
      description: The unsigned byte cast to an Int32, or -1 if at the end of the stream.
    content.vb: Public Overrides Function ReadByte As Integer
  overload: McStreamy.NonClosingStreamAdapter.ReadByte*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.ReadTimeout
  commentId: P:McStreamy.NonClosingStreamAdapter.ReadTimeout
  id: ReadTimeout
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: ReadTimeout
  nameWithType: NonClosingStreamAdapter.ReadTimeout
  fullName: McStreamy.NonClosingStreamAdapter.ReadTimeout
  type: Property
  source:
    id: ReadTimeout
    path: ''
    startLine: 320
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nSets or returns the <xref href=\"System.IO.Stream.ReadTimeout\" data-throw-if-not-resolved=\"false\"></xref> value on the wrapped stream.\n"
  example: []
  syntax:
    content: public override int ReadTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The read timeout.
    content.vb: Public Overrides Property ReadTimeout As Integer
  overload: McStreamy.NonClosingStreamAdapter.ReadTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.CanTimeout
  commentId: P:McStreamy.NonClosingStreamAdapter.CanTimeout
  id: CanTimeout
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: CanTimeout
  nameWithType: NonClosingStreamAdapter.CanTimeout
  fullName: McStreamy.NonClosingStreamAdapter.CanTimeout
  type: Property
  source:
    id: CanTimeout
    path: ''
    startLine: 337
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nReturns the <xref href=\"System.IO.Stream.CanTimeout\" data-throw-if-not-resolved=\"false\"></xref> value from the wrapped stream.\n"
  example: []
  syntax:
    content: public override bool CanTimeout { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can timeout; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanTimeout As Boolean
  overload: McStreamy.NonClosingStreamAdapter.CanTimeout*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: McStreamy.NonClosingStreamAdapter.CanRead
  commentId: P:McStreamy.NonClosingStreamAdapter.CanRead
  id: CanRead
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: NonClosingStreamAdapter.CanRead
  fullName: McStreamy.NonClosingStreamAdapter.CanRead
  type: Property
  source:
    id: CanRead
    path: ''
    startLine: 349
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nReturns the <xref href=\"System.IO.Stream.CanRead\" data-throw-if-not-resolved=\"false\"></xref> value from the wrapped stream.\n"
  example: []
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can read; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: McStreamy.NonClosingStreamAdapter.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: McStreamy.NonClosingStreamAdapter.CanSeek
  commentId: P:McStreamy.NonClosingStreamAdapter.CanSeek
  id: CanSeek
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: NonClosingStreamAdapter.CanSeek
  fullName: McStreamy.NonClosingStreamAdapter.CanSeek
  type: Property
  source:
    id: CanSeek
    path: ''
    startLine: 361
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nReturns the <xref href=\"System.IO.Stream.CanSeek\" data-throw-if-not-resolved=\"false\"></xref> value from the wrapped stream.\n"
  example: []
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can seek; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overload: McStreamy.NonClosingStreamAdapter.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: McStreamy.NonClosingStreamAdapter.CanWrite
  commentId: P:McStreamy.NonClosingStreamAdapter.CanWrite
  id: CanWrite
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: NonClosingStreamAdapter.CanWrite
  fullName: McStreamy.NonClosingStreamAdapter.CanWrite
  type: Property
  source:
    id: CanWrite
    path: ''
    startLine: 373
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nReturns the <xref href=\"System.IO.Stream.CanWrite\" data-throw-if-not-resolved=\"false\"></xref> value from the wrapped stream.\n"
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can write; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: McStreamy.NonClosingStreamAdapter.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: McStreamy.NonClosingStreamAdapter.Length
  commentId: P:McStreamy.NonClosingStreamAdapter.Length
  id: Length
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: NonClosingStreamAdapter.Length
  fullName: McStreamy.NonClosingStreamAdapter.Length
  type: Property
  source:
    id: Length
    path: ''
    startLine: 385
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nReturns the <xref href=\"System.IO.Stream.Length\" data-throw-if-not-resolved=\"false\"></xref> value from the wrapped stream.\n"
  example: []
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
      description: The total length of the stream, if known.
    content.vb: Public Overrides ReadOnly Property Length As Long
  overload: McStreamy.NonClosingStreamAdapter.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: McStreamy.NonClosingStreamAdapter.Position
  commentId: P:McStreamy.NonClosingStreamAdapter.Position
  id: Position
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: NonClosingStreamAdapter.Position
  fullName: McStreamy.NonClosingStreamAdapter.Position
  type: Property
  source:
    id: Position
    path: ''
    startLine: 397
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nSets or returns the <xref href=\"System.IO.Stream.Position\" data-throw-if-not-resolved=\"false\"></xref> value on the wrapped stream, representing the current position within the stream.\n"
  example: []
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The position within the stream.
    content.vb: Public Overrides Property Position As Long
  overload: McStreamy.NonClosingStreamAdapter.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.Flush
  commentId: M:McStreamy.NonClosingStreamAdapter.Flush
  id: Flush
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: NonClosingStreamAdapter.Flush()
  fullName: McStreamy.NonClosingStreamAdapter.Flush()
  type: Method
  source:
    id: Flush
    path: ''
    startLine: 413
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls <xref href=\"System.IO.Stream.Flush\" data-throw-if-not-resolved=\"false\"></xref> on the wrapped stream.\n"
  example: []
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overload: McStreamy.NonClosingStreamAdapter.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:McStreamy.NonClosingStreamAdapter.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: NonClosingStreamAdapter.Read(Byte[], Int32, Int32)
  fullName: McStreamy.NonClosingStreamAdapter.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: Read
    path: ''
    startLine: 425
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls the <xref href=\"System.IO.Stream.Read(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method on the wrapped stream.\n"
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code data-dev-comment-type="paramref" class="paramref">offset</code> and (<code data-dev-comment-type="paramref" class="paramref">offset</code> + <code data-dev-comment-type="paramref" class="paramref">count</code> - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code data-dev-comment-type="paramref" class="paramref">buffer</code> at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read from the current stream.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: McStreamy.NonClosingStreamAdapter.Read*
  nameWithType.vb: NonClosingStreamAdapter.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: McStreamy.NonClosingStreamAdapter.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: McStreamy.NonClosingStreamAdapter.Seek(System.Int64,SeekOrigin)
  commentId: M:McStreamy.NonClosingStreamAdapter.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: NonClosingStreamAdapter.Seek(Int64, SeekOrigin)
  fullName: McStreamy.NonClosingStreamAdapter.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    id: Seek
    path: ''
    startLine: 436
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls the <xref href=\"System.IO.Stream.Seek(System.Int64%2cSystem.IO.SeekOrigin)\" data-throw-if-not-resolved=\"false\"></xref> method on the wrapped stream.\n"
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to the <code data-dev-comment-type="paramref" class="paramref">origin</code> parameter.
    - id: origin
      type: SeekOrigin
      description: A value of type <xref href="System.IO.SeekOrigin" data-throw-if-not-resolved="false"></xref> indicating the reference point used to obtain the new position.
    return:
      type: System.Int64
      description: The new position within the current stream.
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overload: McStreamy.NonClosingStreamAdapter.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.SetLength(System.Int64)
  commentId: M:McStreamy.NonClosingStreamAdapter.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: NonClosingStreamAdapter.SetLength(Int64)
  fullName: McStreamy.NonClosingStreamAdapter.SetLength(System.Int64)
  type: Method
  source:
    id: SetLength
    path: ''
    startLine: 445
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls the <xref href=\"System.IO.Stream.SetLength(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method on the wrapped stream.\n"
  example: []
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
    content.vb: Public Overrides Sub SetLength(value As Long)
  overload: McStreamy.NonClosingStreamAdapter.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: McStreamy.NonClosingStreamAdapter.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:McStreamy.NonClosingStreamAdapter.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: NonClosingStreamAdapter.Write(Byte[], Int32, Int32)
  fullName: McStreamy.NonClosingStreamAdapter.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: Write
    path: ''
    startLine: 456
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nCalls the <xref href=\"System.IO.Stream.Write(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method on the wrapped stream.\n"
  example: []
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. This method copies <code data-dev-comment-type="paramref" class="paramref">count</code> bytes from <code data-dev-comment-type="paramref" class="paramref">buffer</code> to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code data-dev-comment-type="paramref" class="paramref">buffer</code> at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the current stream.
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overload: McStreamy.NonClosingStreamAdapter.Write*
  nameWithType.vb: NonClosingStreamAdapter.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: McStreamy.NonClosingStreamAdapter.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
  commentId: M:McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: McStreamy.NonClosingStreamAdapter
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: NonClosingStreamAdapter.Dispose(Boolean)
  fullName: McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 465
  assemblies:
  - cs.temp.dll
  namespace: McStreamy
  summary: "\nDoes nothing, ensuring the wrapped stream is not closed/disposed.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overload: McStreamy.NonClosingStreamAdapter.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
  commentId: M:McStreamy.NonClosingStreamAdapter.Dispose(System.Boolean)
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: McStreamy
  commentId: N:McStreamy
  isExternal: false
  name: McStreamy
  nameWithType: McStreamy
  fullName: McStreamy
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: McStreamy.NonClosingStreamAdapter
  commentId: T:McStreamy.NonClosingStreamAdapter
  isExternal: false
  name: NonClosingStreamAdapter
  nameWithType: NonClosingStreamAdapter
  fullName: McStreamy.NonClosingStreamAdapter
- uid: McStreamy.NonClosingStreamAdapter.#ctor*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.#ctor
  isExternal: false
  name: NonClosingStreamAdapter
  nameWithType: NonClosingStreamAdapter.NonClosingStreamAdapter
  fullName: McStreamy.NonClosingStreamAdapter.NonClosingStreamAdapter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: McStreamy.NonClosingStreamAdapter.ToString*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.ToString
  isExternal: false
  name: ToString
  nameWithType: NonClosingStreamAdapter.ToString
  fullName: McStreamy.NonClosingStreamAdapter.ToString
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: McStreamy.NonClosingStreamAdapter.WriteTimeout*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.WriteTimeout
  isExternal: false
  name: WriteTimeout
  nameWithType: NonClosingStreamAdapter.WriteTimeout
  fullName: McStreamy.NonClosingStreamAdapter.WriteTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
  commentId: M:McStreamy.NonClosingStreamAdapter.WriteByte(System.Byte)
- uid: McStreamy.NonClosingStreamAdapter.WriteByte*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.WriteByte
  isExternal: false
  name: WriteByte
  nameWithType: NonClosingStreamAdapter.WriteByte
  fullName: McStreamy.NonClosingStreamAdapter.WriteByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: McStreamy.NonClosingStreamAdapter.ReadByte
  commentId: M:McStreamy.NonClosingStreamAdapter.ReadByte
- uid: McStreamy.NonClosingStreamAdapter.ReadByte*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.ReadByte
  isExternal: false
  name: ReadByte
  nameWithType: NonClosingStreamAdapter.ReadByte
  fullName: McStreamy.NonClosingStreamAdapter.ReadByte
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: McStreamy.NonClosingStreamAdapter.ReadTimeout*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.ReadTimeout
  isExternal: false
  name: ReadTimeout
  nameWithType: NonClosingStreamAdapter.ReadTimeout
  fullName: McStreamy.NonClosingStreamAdapter.ReadTimeout
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: McStreamy.NonClosingStreamAdapter.CanTimeout*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.CanTimeout
  isExternal: false
  name: CanTimeout
  nameWithType: NonClosingStreamAdapter.CanTimeout
  fullName: McStreamy.NonClosingStreamAdapter.CanTimeout
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  name: CanRead
  nameWithType: Stream.CanRead
  fullName: System.IO.Stream.CanRead
- uid: McStreamy.NonClosingStreamAdapter.CanRead*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.CanRead
  isExternal: false
  name: CanRead
  nameWithType: NonClosingStreamAdapter.CanRead
  fullName: McStreamy.NonClosingStreamAdapter.CanRead
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: McStreamy.NonClosingStreamAdapter.CanSeek*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: NonClosingStreamAdapter.CanSeek
  fullName: McStreamy.NonClosingStreamAdapter.CanSeek
- uid: System.IO.Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  name: CanWrite
  nameWithType: Stream.CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: McStreamy.NonClosingStreamAdapter.CanWrite*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.CanWrite
  isExternal: false
  name: CanWrite
  nameWithType: NonClosingStreamAdapter.CanWrite
  fullName: McStreamy.NonClosingStreamAdapter.CanWrite
- uid: System.IO.Stream.Length
  commentId: P:System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  name: Length
  nameWithType: Stream.Length
  fullName: System.IO.Stream.Length
- uid: McStreamy.NonClosingStreamAdapter.Length*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Length
  isExternal: false
  name: Length
  nameWithType: NonClosingStreamAdapter.Length
  fullName: McStreamy.NonClosingStreamAdapter.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Stream.Position
  commentId: P:System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  name: Position
  nameWithType: Stream.Position
  fullName: System.IO.Stream.Position
- uid: McStreamy.NonClosingStreamAdapter.Position*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Position
  isExternal: false
  name: Position
  nameWithType: NonClosingStreamAdapter.Position
  fullName: McStreamy.NonClosingStreamAdapter.Position
- uid: System.IO.Stream.Flush
  commentId: M:System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  name: Flush()
  nameWithType: Stream.Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: McStreamy.NonClosingStreamAdapter.Flush*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Flush
  isExternal: false
  name: Flush
  nameWithType: NonClosingStreamAdapter.Flush
  fullName: McStreamy.NonClosingStreamAdapter.Flush
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: Stream.Read(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: McStreamy.NonClosingStreamAdapter.Read*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Read
  isExternal: false
  name: Read
  nameWithType: NonClosingStreamAdapter.Read
  fullName: McStreamy.NonClosingStreamAdapter.Read
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: Stream.Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
- uid: McStreamy.NonClosingStreamAdapter.Seek*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Seek
  isExternal: false
  name: Seek
  nameWithType: NonClosingStreamAdapter.Seek
  fullName: McStreamy.NonClosingStreamAdapter.Seek
- uid: SeekOrigin
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
- uid: System.IO.Stream.SetLength(System.Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: Stream.SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: McStreamy.NonClosingStreamAdapter.SetLength*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.SetLength
  isExternal: false
  name: SetLength
  nameWithType: NonClosingStreamAdapter.SetLength
  fullName: McStreamy.NonClosingStreamAdapter.SetLength
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: Stream.Write(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: McStreamy.NonClosingStreamAdapter.Write*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Write
  isExternal: false
  name: Write
  nameWithType: NonClosingStreamAdapter.Write
  fullName: McStreamy.NonClosingStreamAdapter.Write
- uid: McStreamy.NonClosingStreamAdapter.Dispose*
  commentId: Overload:McStreamy.NonClosingStreamAdapter.Dispose
  isExternal: false
  name: Dispose
  nameWithType: NonClosingStreamAdapter.Dispose
  fullName: McStreamy.NonClosingStreamAdapter.Dispose
